systemservice
systemd or sysvinit or upstart

logging
journalctl


/etc/systemd/system/demo-api-redis@.service
[Unit]
Description=HTTP Hello World
After=network.target

[Service]
User=luke
Environment=REDIS_HOST=localhost
WorkingDirectory=/home/luke/Development/demo-api-redis
ExecStart=/usr/bin/node index.js

[Install]
WantedBy=multi-user.target


systemctl daemon-reload
systemctl enable demo-api-redis@1
systemctl start demo-api-redis@1


/etc/systemd/system/nodeserver.service
[Unit]
Description=Node.js Example Server
#Requires=After=mysql.service       # Requires the mysql service to run first

[Service]
ExecStart=/usr/local/bin/node /opt/nodeserver/server.js
Restart=always
RestartSec=10                       # Restart service after 10 seconds if node service crashes
StandardOutput=syslog               # Output to syslog
StandardError=syslog                # Output to syslog
SyslogIdentifier=nodejs-example
#User=<alternate user>
#Group=<alternate group>
Environment=NODE_ENV=production PORT=1337

[Install]
WantedBy=multi-user.target


systemctl enable nodeserver.service
systemctl start nodeserver.service
systemctl status nodeserver.service
systemctl daemon-reload
systemctl restart nodeserver.service
ps -ef | grep server.js     # find the current pid
kill 12345                  # kill the process by its pid reported above
ps -ef | grep server.js     # notice node process is immediately respawned with a different pid