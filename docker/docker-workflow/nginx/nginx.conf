#TODO
#https://www.nginx.com/blog/5-performance-tips-for-node-js-applications/

worker_processes 4;

events { worker_connections 1024; }

http {

	upstream node-app {
	      #least_conn;
	      ip_hash;
	      server node1:8080 weight=10 max_fails=3 fail_timeout=30s;
	      server node2:8080 weight=10 max_fails=3 fail_timeout=30s;
	      server node3:8080 weight=10 max_fails=3 fail_timeout=30s;
	}
	 
	server {
	      listen 80;

		    #server_name example.com www.example.com;
		
		    #access_log /var/log/nginx/example.com-access.log;
		    #error_log  /var/log/nginx/example.com-error.log error;
		
		    # Browser and robot always look for these
		    # Turn off logging for them
		    #location = /favicon.ico { log_not_found off; access_log off; }
		    #location = /robots.txt  { log_not_found off; access_log off; }
		
		    # Handle static files so they are not proxied to NodeJS
		    # You may want to also hand these requests to other upstream
		    # servers, as you can define more than one!
		    #location ~ ^/(images/|img/|javascript/|js/|css/|stylesheets/|flash/|media/|static/|robots.txt|humans.txt|favicon.ico) {
		    #  root /var/www;
		    #}
	 
	      location / {
	        proxy_pass http://node-app;
          #proxy_redirect off;
        	        
	        #proxy_set_header X-Real-IP $remote_addr;
          #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          #proxy_set_header Host $http_host;
          #proxy_set_header X-NginX-Proxy true;
	        
	        # Handle Web Socket connections
	        proxy_http_version 1.1;
	        proxy_set_header Upgrade $http_upgrade;
	        proxy_set_header Connection 'upgrade';
	        #proxy_set_header Host $http_host;
	        proxy_set_header Host $host;
	        proxy_cache_bypass $http_upgrade;
	      }
	}
	
		#server {
	  #  listen 443;
	
	    # You'll need to have your own certificate and key files
	    # This is not something to blindly copy and paste
	  #  ssl on;
	  #  ssl_certificate     /etc/ssl/example.com/example.com.crt;
	  #  ssl_certificate_key /etc/ssl/example.com/example.com.key;
	
	    # ... the rest here would be just like above ...
	  #  location / {
	  #      proxy_pass http://node-app;
          #proxy_redirect off;
        	        
	        #proxy_set_header X-Real-IP $remote_addr;
          #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          #proxy_set_header Host $http_host;
          #proxy_set_header X-NginX-Proxy true;
	        
	        # Handle Web Socket connections
	   #     proxy_http_version 1.1;
	   #     proxy_set_header Upgrade $http_upgrade;
	   #     proxy_set_header Connection 'upgrade';
	        #proxy_set_header Host $http_host;
	   #     proxy_set_header Host $host;
	   #     proxy_cache_bypass $http_upgrade;
	   #   }
	}
}
